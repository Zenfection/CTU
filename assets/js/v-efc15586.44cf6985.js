"use strict";(self.webpackChunkctu_course_guide=self.webpackChunkctu_course_guide||[]).push([[6912],{52565:(e,o,t)=>{t.r(o),t.d(o,{data:()=>i});const i=JSON.parse('{"key":"v-efc15586","path":"/config/theme/feature.html","title":"Theme Feature Options","lang":"en-US","frontmatter":{"title":"Theme Feature Options","icon":"config","order":3,"category":["Config"],"tag":["Feature","Theme Config"],"summary":"The following options control features provided by theme.\\n","head":[["meta",{"property":"og:url","content":"https://ctu.zenfection.com/config/theme/feature.html"}],["meta",{"property":"og:site_name","content":"vuepress-theme-hope"}],["meta",{"property":"og:title","content":"Theme Feature Options"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-07-01T06:47:49.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:tag","content":"Feature"}],["meta",{"property":"article:tag","content":"Theme Config"}],["meta",{"property":"article:modified_time","content":"2022-07-01T06:47:49.000Z"}]]},"excerpt":"<p>The following options control features provided by theme.</p>\\n","headers":[{"level":2,"title":"Blog Options","slug":"blog-options","children":[{"level":3,"title":"blog.name","slug":"blog-name","children":[]},{"level":3,"title":"blog.avatar","slug":"blog-avatar","children":[]},{"level":3,"title":"blog.description","slug":"blog-description","children":[]},{"level":3,"title":"blog.intro","slug":"blog-intro","children":[]},{"level":3,"title":"blog.medias","slug":"blog-medias","children":[]},{"level":3,"title":"blog.roundAvatar","slug":"blog-roundavatar","children":[]},{"level":3,"title":"blog.sidebarDisplay","slug":"blog-sidebardisplay","children":[]},{"level":3,"title":"blog.timeline","slug":"blog-timeline","children":[]},{"level":3,"title":"blog.articlePerPage","slug":"blog-articleperpage","children":[]},{"level":3,"title":"blog.articleInfo","slug":"blog-articleinfo","children":[]}]},{"level":2,"title":"Encrypt Config","slug":"encrypt-config","children":[{"level":3,"title":"encrypt.global","slug":"encrypt-global","children":[]},{"level":3,"title":"encrypt.admin","slug":"encrypt-admin","children":[]},{"level":3,"title":"encrypt.config","slug":"encrypt-config-1","children":[]}]}],"git":{"createdTime":1656658069000,"updatedTime":1656658069000,"contributors":[{"name":"Zenfection","email":"44715845+Zenfection1412@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":1.57,"words":471},"copyright":"Copyright by \\nhttps://ctu.zenfection.com/config/theme/feature.html","filePathRelative":"config/theme/feature.md","localizedDate":"July 1, 2022"}')},5970:(e,o,t)=>{t.r(o),t.d(o,{default:()=>N});var i=t(66124);const l=(0,i._)("p",null,"The following options control features provided by theme.",-1),a=(0,i._)("h2",{id:"blog-options",tabindex:"-1"},[(0,i._)("a",{class:"header-anchor",href:"#blog-options","aria-hidden":"true"},"#"),(0,i.Uk)(" Blog Options")],-1),n=(0,i.Uk)("The theme adds blog feature using "),r={href:"https://vuepress-theme-hope.github.io/v2/blog/",target:"_blank",rel:"noopener noreferrer"},c=(0,i._)("code",null,"vuepress-plugin-blog2",-1),d=(0,i.Uk)(", and the feature is "),u=(0,i._)("strong",null,"disabled",-1),s=(0,i.Uk)(" by default."),p=(0,i._)("p",null,[(0,i.Uk)("To enable blog plugin and use default options, you can set "),(0,i._)("code",null,"plugins.blog"),(0,i.Uk)(" to "),(0,i._)("code",null,"true"),(0,i.Uk)(" in theme options.")],-1),g={class:"custom-container warning"},h=(0,i._)("p",{class:"custom-container-title"},"Note",-1),b=(0,i._)("p",null,"The following options will have NO effects unless you enable blog plugin.",-1),m=(0,i.Uk)("For details, see "),q=(0,i.Uk)("Blog Feature Intro"),f=(0,i.Uk)("."),y=(0,i.uE)('<h3 id="blog-name" tabindex="-1"><a class="header-anchor" href="#blog-name" aria-hidden="true">#</a> blog.name</h3><ul><li>Type: <code>string</code></li><li>Default: <code>author</code></li></ul><p>Blogger name.</p><h3 id="blog-avatar" tabindex="-1"><a class="header-anchor" href="#blog-avatar" aria-hidden="true">#</a> blog.avatar</h3><ul><li>Type: <code>string</code></li><li>Default: <code>logo</code></li></ul><p>Blogger avatar.</p><h3 id="blog-description" tabindex="-1"><a class="header-anchor" href="#blog-description" aria-hidden="true">#</a> blog.description</h3><ul><li>Type: <code>string</code></li><li>Required: No</li></ul><p>Motto, slogan or a short description.</p><h3 id="blog-intro" tabindex="-1"><a class="header-anchor" href="#blog-intro" aria-hidden="true">#</a> blog.intro</h3><ul><li>Type: <code>string</code></li><li>Required: No</li></ul><p>Personal introduction address of the blogger.</p><div class="custom-container note"><p class="custom-container-title">Note</p><p>Visitors can click on the avatar or name in &quot;Blogger Information&quot; to enter the personal introduction page.</p></div><h3 id="blog-medias" tabindex="-1"><a class="header-anchor" href="#blog-medias" aria-hidden="true">#</a> blog.medias</h3><ul><li>Type: <code>Record&lt;string, string | [string, string]&gt;</code></li><li>Required: No</li></ul><p>Set social links.</p><ul><li><p>If the social media icon is available below, you can set <code>MediaName: MediaLink</code> directly.</p></li><li><p>Otherwise, you should pass in a tuple <code>MediaName: [MediaLink , MediaSvgIconString or MediaSvgIconPath]</code>,</p><p>The second element in the tuple must be a valid SVG string or a full path of a existing SVG file.</p></li></ul><div class="custom-container info"><p class="custom-container-title">Available Social Media</p><p>The following social medias has built-in icons:</p><ul><li><code>&quot;Baidu&quot;</code></li><li><code>&quot;Bitbucket&quot;</code></li><li><code>&quot;Dingding&quot;</code></li><li><code>&quot;Discord&quot;</code></li><li><code>&quot;Dribbble&quot;</code></li><li><code>&quot;Email&quot;</code></li><li><code>&quot;Evernote&quot;</code></li><li><code>&quot;Facebook&quot;</code></li><li><code>&quot;Flipboard&quot;</code></li><li><code>&quot;Gitee&quot;</code></li><li><code>&quot;GitHub&quot;</code></li><li><code>&quot;Gitlab&quot;</code></li><li><code>&quot;Gmail&quot;</code></li><li><code>&quot;Instagram&quot;</code></li><li><code>&quot;Line&quot;</code></li><li><code>&quot;Linkedin&quot;</code></li><li><code>&quot;Pinterest&quot;</code></li><li><code>&quot;Pocket&quot;</code></li><li><code>&quot;QQ&quot;</code></li><li><code>&quot;Qzone&quot;</code></li><li><code>&quot;Reddit&quot;</code></li><li><code>&quot;Rss&quot;</code></li><li><code>&quot;Steam&quot;</code></li><li><code>&quot;Twitter&quot;</code></li><li><code>&quot;Wechat&quot;</code></li><li><code>&quot;Weibo&quot;</code></li><li><code>&quot;Whatsapp&quot;</code></li><li><code>&quot;Youtube&quot;</code></li><li><code>&quot;Zhihu&quot;</code></li></ul></div><h3 id="blog-roundavatar" tabindex="-1"><a class="header-anchor" href="#blog-roundavatar" aria-hidden="true">#</a> blog.roundAvatar</h3><ul><li>Type: <code>boolean</code></li><li>Default: <code>false</code></li></ul><p>Whether cliping the avatar with round shape</p><h3 id="blog-sidebardisplay" tabindex="-1"><a class="header-anchor" href="#blog-sidebardisplay" aria-hidden="true">#</a> blog.sidebarDisplay</h3><ul><li>Type: <code>&quot;mobile&quot; | &quot;none&quot; | &quot;always&quot;</code></li><li>Default: <code>&quot;mobile&quot;</code></li></ul><p>Whether to show blogger information in the sidebar</p><ul><li><code>&quot;mobile&quot;</code>: Show in sidebar in mobile view</li><li><code>&quot;always&quot;</code>: Always show in the sidebar</li><li><code>&quot;none&quot;</code>: Never show in the sidebar</li></ul><h3 id="blog-timeline" tabindex="-1"><a class="header-anchor" href="#blog-timeline" aria-hidden="true">#</a> blog.timeline</h3><ul><li>Type: <code>string</code></li><li>Default: <code>&quot;Yesterday once more&quot;</code></li></ul><p>Text on the top of timeline page.</p><h3 id="blog-articleperpage" tabindex="-1"><a class="header-anchor" href="#blog-articleperpage" aria-hidden="true">#</a> blog.articlePerPage</h3><ul><li>Type: <code>number</code></li><li>Default: <code>10</code></li></ul><p>Article number per page</p><h3 id="blog-articleinfo" tabindex="-1"><a class="header-anchor" href="#blog-articleinfo" aria-hidden="true">#</a> blog.articleInfo</h3><ul><li>Type: <code>ArticleInfo[]</code></li><li>Default: <code>[&quot;Author&quot;, &quot;Original&quot;, &quot;Date&quot;, &quot;PageView&quot;, &quot;Category&quot;, &quot;Tag&quot;, &quot;ReadingTime&quot;]</code></li></ul><p>Article info displayed in article list</p><p>Available values for <code>ArticleInfo</code>:</p><ul><li><code>&quot;Author&quot;</code></li><li><code>&quot;Category&quot;</code></li><li><code>&quot;Date&quot;</code></li><li><code>&quot;Original&quot;</code></li><li><code>&quot;Tag&quot;</code></li><li><code>&quot;ReadingTime&quot;</code></li><li><code>&quot;Word&quot;</code></li></ul>',36),v={id:"encrypt-config",tabindex:"-1"},k=(0,i._)("a",{class:"header-anchor",href:"#encrypt-config","aria-hidden":"true"},"#",-1),T=(0,i.Uk)(" Encrypt Config "),w=(0,i.Uk)("For details, see "),_=(0,i.Uk)("Encrypt Intro"),x=(0,i.Uk)("."),D=(0,i.uE)('<div class="custom-container note"><p class="custom-container-title">Note</p><p>You can only set this option directly under theme options, setting it in each loclae <strong>has NO effect</strong>.</p></div><h3 id="encrypt-global" tabindex="-1"><a class="header-anchor" href="#encrypt-global" aria-hidden="true">#</a> encrypt.global</h3><ul><li>Type: <code>boolean</code></li><li>Default: <code>false</code></li></ul><p>Whether to encrypt globally.</p><h3 id="encrypt-admin" tabindex="-1"><a class="header-anchor" href="#encrypt-admin" aria-hidden="true">#</a> encrypt.admin</h3><ul><li>Type: <code>string | string []</code></li><li>Required: No</li></ul><p>Admin password with highest authority, you can set multiple by using array.</p><h3 id="encrypt-config-1" tabindex="-1"><a class="header-anchor" href="#encrypt-config-1" aria-hidden="true">#</a> encrypt.config</h3><ul><li>Type: <code>Record &lt;string, string | string []&gt;</code></li><li>Required: No</li></ul><p>The encryption configuration is an object with a key name matching the path and a key-value corresponding to a password that accepts a string or an array of strings.</p><details class="custom-container details"><summary>Example</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>\n  <span class="token comment">// This will encrypt the entire guide directory and both passwords will be available</span>\n  <span class="token string-property property">&quot;/guide/&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;1234&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;5678&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token comment">// this will only encrypt config/page.html</span>\n  <span class="token string-property property">&quot;/config/page.html&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1234&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>',11),U={},N=(0,t(61220).Z)(U,[["render",function(e,o){const t=(0,i.up)("ExternalLinkIcon"),U=(0,i.up)("RouterLink"),N=(0,i.up)("Badge");return(0,i.wg)(),(0,i.iD)("div",null,[l,(0,i.kq)(" more "),a,(0,i._)("p",null,[n,(0,i._)("a",r,[c,(0,i.Wm)(t)]),d,u,s]),p,(0,i._)("div",g,[h,b,(0,i._)("p",null,[m,(0,i.Wm)(U,{to:"/guide/blog/intro.html"},{default:(0,i.w5)((()=>[q])),_:1}),f])]),y,(0,i._)("h2",v,[k,T,(0,i.Wm)(N,{text:"Root only",type:"warning"})]),(0,i._)("p",null,[w,(0,i.Wm)(U,{to:"/guide/feature/encrypt.html"},{default:(0,i.w5)((()=>[_])),_:1}),x]),D])}]])},61220:(e,o)=>{o.Z=(e,o)=>{const t=e.__vccOpts||e;for(const[e,i]of o)t[e]=i;return t}}}]);