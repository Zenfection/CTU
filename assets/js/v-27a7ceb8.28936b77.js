"use strict";(self.webpackChunkctu_course_guide=self.webpackChunkctu_course_guide||[]).push([[6897],{98786:(n,e,t)=>{t.r(e),t.d(e,{data:()=>s});const s=JSON.parse('{"key":"v-27a7ceb8","path":"/cookbook/advanced/component.html","title":"Using Components","lang":"en-US","frontmatter":{"title":"Using Components","icon":"plugin","category":["Tutorial","Customize"],"tag":["Components","Customize"],"summary":"This tutorial will guide you on how to use Vue components and Vue syntax in your VuePress project.\\n","head":[["meta",{"property":"og:url","content":"https://ctu.zenfection.com/cookbook/advanced/component.html"}],["meta",{"property":"og:site_name","content":"vuepress-theme-hope"}],["meta",{"property":"og:title","content":"Using Components"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-07-01T06:47:49.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:tag","content":"Components"}],["meta",{"property":"article:tag","content":"Customize"}],["meta",{"property":"article:modified_time","content":"2022-07-01T06:47:49.000Z"}]]},"excerpt":"<p>This tutorial will guide you on how to use Vue components and Vue syntax in your VuePress project.</p>\\n","headers":[{"level":2,"title":"Import Vue Components Globally","slug":"import-vue-components-globally","children":[{"level":3,"title":"Register via @vuepress/plugin-register-components","slug":"register-via-vuepress-plugin-register-components","children":[]},{"level":3,"title":"Register via ClientConfigFile","slug":"register-via-clientconfigfile","children":[]}]},{"level":2,"title":"Using Vue syntax and components in Markdown","slug":"using-vue-syntax-and-components-in-markdown","children":[]}],"git":{"createdTime":1656658069000,"updatedTime":1656658069000,"contributors":[{"name":"Zenfection","email":"44715845+Zenfection1412@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":1.35,"words":405},"copyright":"Copyright by \\nhttps://ctu.zenfection.com/cookbook/advanced/component.html","filePathRelative":"cookbook/advanced/component.md","localizedDate":"July 1, 2022"}')},15653:(n,e,t)=>{t.r(e),t.d(e,{default:()=>g});var s=t(66124);const a=(0,s._)("p",null,"This tutorial will guide you on how to use Vue components and Vue syntax in your VuePress project.",-1),o=(0,s._)("h2",{id:"import-vue-components-globally",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#import-vue-components-globally","aria-hidden":"true"},"#"),(0,s.Uk)(" Import Vue Components Globally")],-1),i=(0,s._)("h3",{id:"register-via-vuepress-plugin-register-components",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#register-via-vuepress-plugin-register-components","aria-hidden":"true"},"#"),(0,s.Uk)(" Register via "),(0,s._)("code",null,"@vuepress/plugin-register-components")],-1),p=(0,s._)("p",null,[(0,s.Uk)("You can automatically register components via the "),(0,s._)("code",null,"@vuepress/plugin-register-components"),(0,s.Uk)(" plugin.")],-1),c=(0,s.Uk)("For details about how to use the plugin, see "),l={href:"https://v2.vuepress.vuejs.org/reference/plugin/register-components.html",target:"_blank",rel:"noopener noreferrer"},r=(0,s.Uk)("Official Documentation"),u=(0,s.Uk)("."),d=(0,s.uE)('<h3 id="register-via-clientconfigfile" tabindex="-1"><a class="header-anchor" href="#register-via-clientconfigfile" aria-hidden="true">#</a> Register via ClientConfigFile</h3><p>You can create <code>.vuepress/client.ts</code> and register components manually.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// .vuepress/client.ts</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@vuepress/client&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> MyComponent <span class="token keyword">from</span> <span class="token string">&quot;./MyComponent.vue&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function-variable function">enhance</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> app<span class="token punctuation">,</span> router<span class="token punctuation">,</span> siteData <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&quot;MyComponent&quot;</span><span class="token punctuation">,</span> MyComponent<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="using-vue-syntax-and-components-in-markdown" tabindex="-1"><a class="header-anchor" href="#using-vue-syntax-and-components-in-markdown" aria-hidden="true">#</a> Using Vue syntax and components in Markdown</h2><p>You can use Vue syntax directly in Markdown.</p><div class="custom-container info"><p class="custom-container-title">Info</p><p>For the specific usage, see [VuePress â†’ Markdown](../vuepress/markdown.md#Use -vue in -markdown-)</p></div><p>If you need to import Vue components in Markdown, please note that you cannot use relative paths to import, nor write multiple <code>&lt;script&gt;</code> blocks.</p><div class="custom-container info"><p class="custom-container-title">Markdown with Vue SFC</p><p>Every Markdown file is first compiled to HTML and then converted to a Vue Single File Component (SFC). In other words, you can write Markdown files like Vue SFC:</p><p><code>&lt;script&gt;</code> and <code>&lt;style&gt;</code> tags are directly treated as tags in Vue SFC. In other words, they are promoted from the <code>&lt;template&gt;</code> tag to the top level of the SFC. All content other than <code>&lt;script&gt;</code> and <code>&lt;style&gt;</code> tags will be compiled to HTML and then treated as <code>&lt;template&gt;</code> tags in Vue SFC.</p><p>Since Vue single-file components can only contain one <code>&lt;script&gt;</code> tag, you should avoid using more than one <code>&lt;script&gt;</code> tag in VuePress Markdown.</p><p>In addition, since Markdown will be converted to Vue single-file components in the cache directory, any relative path import will be invalid in Vue SFC.</p></div><p>In order to import your own components correctly, you need to create aliases for them, you can do this with the <code>alias</code> option:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// .vuepress/config.ts</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> path <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@vuepress/utils&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  alias<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token string-property property">&quot;@MyComponent&quot;</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&quot;components/MyComponent.vue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyComponent</span> <span class="token punctuation">/&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\nimport MyComponent from &quot;@MyComponent&quot;;\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>It&#39;s a bit more complicated, but if the component is only used in one page, importing like this has advantages:</p><ul><li>Global import means that the component code needs to be loaded when VuePress is initialized, that is, when visiting the first page</li><li>Importing in Markdown causes the component code to be included in the page code so that it will only be loaded when visiting the page</li></ul>',13),m={},g=(0,t(61220).Z)(m,[["render",function(n,e){const t=(0,s.up)("ExternalLinkIcon");return(0,s.wg)(),(0,s.iD)("div",null,[a,(0,s.kq)(" more "),o,i,p,(0,s._)("p",null,[c,(0,s._)("a",l,[r,(0,s.Wm)(t)]),u]),d])}]])},61220:(n,e)=>{e.Z=(n,e)=>{const t=n.__vccOpts||n;for(const[n,s]of e)t[n]=s;return t}}}]);