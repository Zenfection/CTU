"use strict";(self.webpackChunkctu_course_guide=self.webpackChunkctu_course_guide||[]).push([[1721],{76677:(n,e,s)=>{s.r(e),s.d(e,{data:()=>a});const a=JSON.parse('{"key":"v-0fb8922b","path":"/guide/markdown/attrs.html","title":"Attrs support","lang":"en-US","frontmatter":{"title":"Attrs support","icon":"code","category":["Markdown"],"tag":["Attributes","Markdown"],"summary":"You can use custom syntax to add attrs for markdown content.\\n","head":[["meta",{"property":"og:url","content":"https://ctu.zenfection.com/guide/markdown/attrs.html"}],["meta",{"property":"og:site_name","content":"vuepress-theme-hope"}],["meta",{"property":"og:title","content":"Attrs support"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-07-01T06:47:49.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:tag","content":"Attributes"}],["meta",{"property":"article:tag","content":"Markdown"}],["meta",{"property":"article:modified_time","content":"2022-07-01T06:47:49.000Z"}]]},"excerpt":"<p>You can use custom syntax to add attrs for markdown content.</p>\\n","headers":[{"level":2,"title":"Config","slug":"config","children":[]},{"level":2,"title":"Usage","slug":"usage","children":[]},{"level":2,"title":"Advanced","slug":"advanced","children":[]},{"level":2,"title":"Demo","slug":"demo","children":[]}],"git":{"createdTime":1656658069000,"updatedTime":1656658069000,"contributors":[{"name":"Zenfection","email":"44715845+Zenfection1412@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":0.96,"words":288},"copyright":"Copyright by \\nhttps://ctu.zenfection.com/guide/markdown/attrs.html","filePathRelative":"guide/markdown/attrs.md","localizedDate":"July 1, 2022"}')},17669:(n,e,s)=>{s.r(e),s.d(e,{default:()=>d});var a=s(66124);const t=(0,a._)("p",null,"You can use custom syntax to add attrs for markdown content.",-1),i=(0,a._)("h2",{id:"config",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#config","aria-hidden":"true"},"#"),(0,a.Uk)(" Config")],-1),l=(0,a._)("div",{class:"language-text ext-text line-numbers-mode"},[(0,a._)("pre",{class:"language-text"},[(0,a._)("code",null,'// .vuepress/config.ts\nimport { defineUserConfig } from "vuepress";\nimport { hopeTheme } from "vuepress-theme-hope";\n\nexport default defineUserConfig({\n  theme: hopeTheme({\n    plugins: {\n      mdEnhance: {\n        attrs: true,\n      },\n    },\n  }),\n});\n')]),(0,a._)("div",{class:"highlight-lines"},[(0,a._)("br"),(0,a._)("br"),(0,a._)("br"),(0,a._)("br"),(0,a._)("br"),(0,a._)("br"),(0,a._)("br"),(0,a._)("div",{class:"highlight-line"}," "),(0,a._)("br"),(0,a._)("br"),(0,a._)("br"),(0,a._)("br"),(0,a._)("br")]),(0,a._)("div",{class:"line-numbers","aria-hidden":"true"},[(0,a._)("div",{class:"line-number"}),(0,a._)("div",{class:"line-number"}),(0,a._)("div",{class:"line-number"}),(0,a._)("div",{class:"line-number"}),(0,a._)("div",{class:"line-number"}),(0,a._)("div",{class:"line-number"}),(0,a._)("div",{class:"line-number"}),(0,a._)("div",{class:"line-number"}),(0,a._)("div",{class:"line-number"}),(0,a._)("div",{class:"line-number"}),(0,a._)("div",{class:"line-number"}),(0,a._)("div",{class:"line-number"}),(0,a._)("div",{class:"line-number"})])],-1),o=(0,a._)("div",{class:"language-text ext-text line-numbers-mode"},[(0,a._)("pre",{class:"language-text"},[(0,a._)("code",null,'// .vuepress/config.js\nconst { hopeTheme } = require("vuepress-theme-hope");\n\nmodule.exports = {\n  theme: hopeTheme({\n    plugins: {\n      mdEnhance: {\n        attrs: true,\n      },\n    },\n  }),\n};\n')]),(0,a._)("div",{class:"highlight-lines"},[(0,a._)("br"),(0,a._)("br"),(0,a._)("br"),(0,a._)("br"),(0,a._)("br"),(0,a._)("br"),(0,a._)("br"),(0,a._)("div",{class:"highlight-line"}," "),(0,a._)("br"),(0,a._)("br"),(0,a._)("br"),(0,a._)("br")]),(0,a._)("div",{class:"line-numbers","aria-hidden":"true"},[(0,a._)("div",{class:"line-number"}),(0,a._)("div",{class:"line-number"}),(0,a._)("div",{class:"line-number"}),(0,a._)("div",{class:"line-number"}),(0,a._)("div",{class:"line-number"}),(0,a._)("div",{class:"line-number"}),(0,a._)("div",{class:"line-number"}),(0,a._)("div",{class:"line-number"}),(0,a._)("div",{class:"line-number"}),(0,a._)("div",{class:"line-number"}),(0,a._)("div",{class:"line-number"}),(0,a._)("div",{class:"line-number"})])],-1),c=(0,a.uE)('<h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><p>You can use <code>{attrs}</code> to add attrs to markdown content.</p><p>For example, if you want a heading2 &quot;Hello World&quot; with a id &quot;say-hello-world&quot;, you can write:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">##</span> Hello World {#say-hello-world}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>If you want a image with class &quot;full-width&quot;, you can write:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token url"><span class="token operator">!</span>[<span class="token content">img</span>](<span class="token url">link/to/image.png</span>)</span> {.full-width}\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Also, other attrs are supported, so:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>A paragraph with some text. {#p .a .b align=center customize-attr=&quot;content with spaces&quot;}\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>will be rendered into:</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>p<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>a b<span class="token punctuation">&quot;</span></span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>center<span class="token punctuation">&quot;</span></span> <span class="token attr-name">customize-attr</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>content with spaces<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  A paragraph with some text.\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="advanced" tabindex="-1"><a class="header-anchor" href="#advanced" aria-hidden="true">#</a> Advanced</h2><p>You can pass options to <code>plugins.mdEnhance.attrs</code> to cutomize plugin behavior.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">AttrsOptions</span> <span class="token punctuation">{</span>\n  <span class="token doc-comment comment">/**\n   * left delimiter\n   *\n   * <span class="token keyword">@default</span> &#39;<span class="token punctuation">{</span>&#39;\n   */</span>\n  left<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n\n  <span class="token doc-comment comment">/**\n   * right delimiter\n   *\n   * <span class="token keyword">@default</span> &#39;<span class="token punctuation">}</span>&#39;\n   */</span>\n  right<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n\n  <span class="token doc-comment comment">/**\n   * allowed attributes\n   *\n   * <span class="token keyword">@description</span> An empty list means allowing all attribute\n   *\n   * <span class="token keyword">@default</span> []\n   */</span>\n  allowed<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token builtin">string</span> <span class="token operator">|</span> RegExp<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="demo" tabindex="-1"><a class="header-anchor" href="#demo" aria-hidden="true">#</a> Demo</h2><p>Text with <code class="inline-code">inline code</code> and <img src="/favicon.ico" alt="favicon" class="image">, also supporting <em class="emphasis">emphasis</em> and <strong class="bold">bold</strong>.</p><table class="table"><thead><tr><th>Table</th></tr></thead><tbody><tr><td>content</td></tr></tbody></table><ul class="list"><li class="list-item"><p>list item</p><ul class="nested"><li>nested list item</li></ul></li></ul><p class="break">A line with break<br></p><hr class="horizontal"><p class="block">block content</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>Text with <span class="token code-snippet code keyword">`inline code`</span>{.inline-code} and <span class="token url"><span class="token operator">!</span>[<span class="token content">favicon</span>](<span class="token url">/favicon.ico</span>)</span>{.image}, also supporting <span class="token italic"><span class="token punctuation">_</span><span class="token content">emphasis</span><span class="token punctuation">_</span></span>{.emphasis} and <span class="token bold"><span class="token punctuation">**</span><span class="token content">bold</span><span class="token punctuation">**</span></span>{.bold}.\n\n| Table   |\n| ------- |\n| content |\n\n{.table}\n\n<span class="token list punctuation">-</span> list item{.list-item}\n\n  <span class="token list punctuation">-</span> nested list item\n    {.nested}\n\n{.list}\n\nA line with break  \n{.break}\n\n--- {.horizontal}\n\nblock content {.block}\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',21),r={},d=(0,s(61220).Z)(r,[["render",function(n,e){const s=(0,a.up)("CodeTabs");return(0,a.wg)(),(0,a.iD)("div",null,[t,(0,a.kq)(" more "),i,(0,a.Wm)(s,{data:[{title:"TS"},{title:"JS"}],"tab-id":"language"},{tab0:(0,a.w5)((({title:n,value:e,isActive:s})=>[l])),tab1:(0,a.w5)((({title:n,value:e,isActive:s})=>[o])),_:1}),c])}]])},61220:(n,e)=>{e.Z=(n,e)=>{const s=n.__vccOpts||n;for(const[n,a]of e)s[n]=a;return s}}}]);