"use strict";(self.webpackChunkctu_course_guide=self.webpackChunkctu_course_guide||[]).push([[8873],{45965:(e,t,n)=>{n.r(t),n.d(t,{data:()=>o});const o=JSON.parse('{"key":"v-fd859228","path":"/cookbook/tutorial/content.html","title":"Project Content","lang":"en-US","frontmatter":{"title":"Project Content","icon":"page","category":["Cookbook","Tutorial","Get Started"],"tag":["Project Content"],"summary":"This tutorial guides you on how to weite content in a VuePress project.\\n","head":[["meta",{"property":"og:url","content":"https://ctu.zenfection.com/cookbook/tutorial/content.html"}],["meta",{"property":"og:site_name","content":"vuepress-theme-hope"}],["meta",{"property":"og:title","content":"Project Content"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-07-01T06:47:49.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:tag","content":"Project Content"}],["meta",{"property":"article:modified_time","content":"2022-07-01T06:47:49.000Z"}]]},"excerpt":"<p>This tutorial guides you on how to weite content in a VuePress project.</p>\\n","headers":[{"level":2,"title":"Generating Pages","slug":"generating-pages","children":[]},{"level":2,"title":"Frontmatter","slug":"frontmatter","children":[]},{"level":2,"title":"Markdown","slug":"markdown","children":[]}],"git":{"createdTime":1656658069000,"updatedTime":1656658069000,"contributors":[{"name":"Zenfection","email":"44715845+Zenfection1412@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":1.45,"words":434},"copyright":"Copyright by \\nhttps://ctu.zenfection.com/cookbook/tutorial/content.html","filePathRelative":"cookbook/tutorial/content.md","localizedDate":"July 1, 2022"}')},65632:(e,t,n)=>{n.r(t),n.d(t,{default:()=>C});var o=n(66124);const a=(0,o._)("p",null,"This tutorial guides you on how to weite content in a VuePress project.",-1),r=(0,o.uE)('<h2 id="generating-pages" tabindex="-1"><a class="header-anchor" href="#generating-pages" aria-hidden="true">#</a> Generating Pages</h2><p>VuePress is markdown-centered. Each Markdown file inside your project is a standalone page.</p><p>By default, the route path of a page is determined by the relative path of your Markdown file.</p><p>In the previous chapter, the <code>docs</code> directory was used as VuePress project folder. So if you have the following path structure:</p><p>Assuming this is the directory structure of your Markdown files:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>└─ docs\n   ├─ guide\n   │  ├─ ...\n   │  └─ page.md\n   │  └─ markdown.md\n   │  └─ README.md\n   ├─ ...\n   ├─ slide.md\n   └─ README.md\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The route path of your Markdown files are:</p><table><thead><tr><th>Relative Path</th><th>Route Path</th></tr></thead><tbody><tr><td><code>/README.md</code></td><td><code>/</code></td></tr><tr><td><code>/slide.md</code></td><td><code>/slide.html</code></td></tr><tr><td><code>/guide/README.md</code></td><td><code>/guide/</code></td></tr><tr><td><code>/guide/slide.md</code></td><td><code>/guide/slide.html</code></td></tr><tr><td><code>/guide/page.md</code></td><td><code>/guide/page.html</code></td></tr></tbody></table><div class="custom-container tip"><p class="custom-container-title">README.md</p><p><code>README.md</code> is a special case. In Markdown, by convention, it will be used as the home page of the folder where it is located. So when it is rendered as a web page, its corresponding path is the home page path <code>index.html</code> in the web page.</p><p>This should be easy to understand.</p></div><h2 id="frontmatter" tabindex="-1"><a class="header-anchor" href="#frontmatter" aria-hidden="true">#</a> Frontmatter</h2>',10),i=(0,o.Uk)("Frontmatter is a very important concept in VuePress, it is used to carry config of Markdown files. Markdown files can contain a "),s={href:"https://yaml.org/",target:"_blank",rel:"noopener noreferrer"},d=(0,o.Uk)("YAML"),l=(0,o.Uk)(" Frontmatter."),c=(0,o.uE)('<p>Frontmatter must be at the top of the Markdown file, surrounded by a pair of triple dashes. Here is a basic example:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token front-matter-block"><span class="token punctuation">---</span>\n<span class="token front-matter yaml language-yaml"><span class="token key atrule">lang</span><span class="token punctuation">:</span> en<span class="token punctuation">-</span>US\n<span class="token key atrule">title</span><span class="token punctuation">:</span> the title of the page\n<span class="token key atrule">description</span><span class="token punctuation">:</span> the description of the page</span>\n<span class="token punctuation">---</span></span>\n\n<span class="token comment">&lt;!-- Here is Markdown Content --&gt;</span>\n\n...\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You must have noticed that the fields in Frontmatter are very similar to VuePress config files. You can override the <code>lang</code>, <code>title</code>, <code>description</code> and other properties of the current page through Frontmatter. Therefore, you can think of Frontmatter as a page-level scope config, which usually has the highest priority, and the config only takes effect on the current page.</p><h2 id="markdown" tabindex="-1"><a class="header-anchor" href="#markdown" aria-hidden="true">#</a> Markdown</h2><p>Each Markdown file will be processed by VuePress Theme Hope to render the content of the file as web content.</p>',5),u={class:"custom-container tip"},p=(0,o._)("p",{class:"custom-container-title"},"Markdown Syntax",-1),m=(0,o.Uk)("If you don't know Markdown yet, check out the "),h=(0,o.Uk)("Markdown Tutorial"),g=(0,o.Uk)("."),k=(0,o._)("p",null,"In about fifteen minutes, you can learn how to write Markdown, remember to come back after reading it!",-1),f=(0,o._)("p",null,"You can try editing the Markdown file yourself to modify the content of the template. If you have started the development server, the modified results will be synced to the development server in real time.",-1),v={class:"custom-container info"},y=(0,o._)("p",{class:"custom-container-title"},"Markdown Extension",-1),b=(0,o.Uk)("VuePress itself extends some Markdown syntax. For details, see "),w=(0,o.Uk)("VuePress → Markdown"),_=(0,o.Uk)("."),M=(0,o.Uk)("The theme additionally enables some syntax extensions via "),P=(0,o._)("code",null,"vuepress-plugin-md-enhance",-1),x=(0,o.Uk)(", see "),E=(0,o.Uk)("Guide → Markdown"),U=(0,o.Uk)("."),T={},C=(0,n(61220).Z)(T,[["render",function(e,t){const n=(0,o.up)("ExternalLinkIcon"),T=(0,o.up)("RouterLink");return(0,o.wg)(),(0,o.iD)("div",null,[a,(0,o.kq)(" more "),r,(0,o._)("p",null,[i,(0,o._)("a",s,[d,(0,o.Wm)(n)]),l]),c,(0,o._)("div",u,[p,(0,o._)("p",null,[m,(0,o.Wm)(T,{to:"/cookbook/markdown/"},{default:(0,o.w5)((()=>[h])),_:1}),g]),k]),f,(0,o._)("div",v,[y,(0,o._)("ul",null,[(0,o._)("li",null,[(0,o._)("p",null,[b,(0,o.Wm)(T,{to:"/cookbook/vuepress/markdown.html"},{default:(0,o.w5)((()=>[w])),_:1}),_])]),(0,o._)("li",null,[(0,o._)("p",null,[M,P,x,(0,o.Wm)(T,{to:"/guide/get-started/markdown.html"},{default:(0,o.w5)((()=>[E])),_:1}),U])])])])])}]])},61220:(e,t)=>{t.Z=(e,t)=>{const n=e.__vccOpts||e;for(const[e,o]of t)n[e]=o;return n}}}]);